#!/usr/bin/env node
// var args = process.argv.slice(2);

var exec = require('child_process').exec;
var fs = require("fs");

if (fs.existsSync(__dirname+"/../../config/env_vars.js")) {
  var env = require(__dirname+"/../../config/env_vars.js").env;
  for (i in env) { process.env[i] = env[i]; }
}

process.env.NODE_ENV = "development"; // could also be staging...

var models  = require(__dirname+"/../../models");
// var token = require(__dirname+"/../../utils/internal-rfcx/token.js").token;
// var aws = require(__dirname+"/../../utils/external/aws.js").aws();

var analysisUtils = require(__dirname+"/../../utils/rfcx-analysis/analysis-queue.js").analysisUtils;

analysisUtils.queueAudioForAnalysis("v1","aa",{
  guardian_guid: "blah",
  checkin_guid: "blah",
  audio_guid: "blah",
  api_url_domain: "https://api.rfcx.org",
  audio_s3_path: "blah",
  audio_sha1_checksum: "blah",
});


// if (args[0] == null) {
  
//   console.log("You must provide a count and a guardian guid as arguments.");

// } else {

// var query_limit = parseInt(args[0]);
// var guardian_id = args[1];

// var audArr = {};

// models.Guardian
//   .findOne( { where: { guid: guardian_id } })
//   .then(function(dbGuardian){

//     models.GuardianAudio
//       .findAll({ 
//         where: { guardian_id: dbGuardian.id, analysis_queued_at: null }, 
//         include: [ { all: true } ], 
//         order: [ ["measured_at", "DESC"] ],
//         limit: query_limit
//       }).then(function(dbAudio){

//         for (dbAudInd in dbAudio) {

//           dbAudio[dbAudInd].s3Path = dbAudio[dbAudInd].url.substr(13);

//           audArr[dbAudio[dbAudInd].guid] = dbAudio[dbAudInd];

//           if (dbAudio[dbAudInd].Event.length < 1) {

//             token.createAnonymousToken({
//               reference_tag: dbAudio[dbAudInd].guid,
//               token_type: "analysis-worker",
//               created_by: "re-analyze-script",
//               minutes_until_expiration: 300,
//               allow_garbage_collection: false,
//               only_allow_access_to: [
//                 "^/v1/guardians/"+dbGuardian.guid+"/checkins/"+dbAudio[dbAudInd].CheckIn.guid+"/audio/"+dbAudio[dbAudInd].guid+"/events$"
//                 ]
//             }).then(function(tokenInfo){

//               aws.sns().publish({
//                 TopicArn: aws.snsTopicArn("rfcx-analysis"),
//                 Message: JSON.stringify({
                    
//                     measured_at: audArr[tokenInfo.reference_tag].measured_at,

//                     api_token_guid: tokenInfo.token_guid,
//                     api_token: tokenInfo.token,
//                     api_token_expires_at: tokenInfo.token_expires_at,
//                     api_url: "https://api.rfcx.org"+"/v1/guardians/"+guardian_id+"/checkins/"+audArr[tokenInfo.reference_tag].CheckIn.guid+"/audio/"+tokenInfo.reference_tag+"/events",
//                     audio_url: aws.s3SignedUrl(process.env.ASSET_BUCKET_AUDIO, audArr[tokenInfo.reference_tag].s3Path, Math.round((tokenInfo.token_expires_at.valueOf()-(new Date()).valueOf())/60000)),
//                     audio_sha1: audArr[tokenInfo.reference_tag].sha1_checksum
//                   })
//               }, function(snsErr, snsData) {

//                 if (!!snsErr) {
//                   console.log(snsErr);
//                 } else {

//                 audArr[tokenInfo.reference_tag].analysis_queued_at = new Date();

//                 audArr[tokenInfo.reference_tag].save();

//                 console.log(audArr[tokenInfo.reference_tag].sha1_checksum +" | "+ audArr[tokenInfo.reference_tag].CheckIn.guid +" | "+ snsData.MessageId);

//                 }

//               });


//             }).catch(function(err){
//               console.log("error creating access token for analysis worker | "+err);
//             });
//           } else {
//             audArr[dbAudio[dbAudInd].guid].analysis_queued_at = new Date();
//             audArr[dbAudio[dbAudInd].guid].save();
//             console.log('skipped');
//           }

//         }

//     }).catch(function(err){
//       console.log("failed to return audio | "+err);
//     });

//   }).catch(function(err){
//     console.log("failed to find guardian reference | "+err);
//   });
// }